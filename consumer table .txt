consumer table 

title
First Name
Last Name
Email
Date of Birth
Gender
Category
Mobile No.
UserId
Aadhaar Card No

Documents=>{
AadhaarCardPhoto
RashanCardPhoto
applicantPhoto
}
Address
House/plot/premise no.
Street
Area/Colony
Town/Village
District
Blocks
Pincode
termCondition
status


package com.nit.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString
public class Role {

	  @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Integer id;

	    @Column(unique = true)
	    private String name;
}
package com.nit.model;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Set;

import org.springframework.stereotype.Component;

import jakarta.annotation.Nonnull;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.PrePersist;
import jakarta.persistence.SequenceGenerator;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString
public class ApplicantRegister implements Serializable{

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "my_seq_gen")
	@SequenceGenerator(name = "my_seq_gen", sequenceName = "my_sequence", allocationSize = 1)
	private Integer id;
	@Column(nullable = false, unique = true) // Ensures database-level uniqueness
	private String userId;
	private String password;
	private String email;
	private String connectionType;
	@Column(nullable = false, unique = true)
	 private Long mobile;
	   @Column(nullable = false, updatable = false) // The date is not updated after creation
	    private LocalDateTime createdDate;

	    @PrePersist
	    protected void onCreate() {
	        this.createdDate = LocalDateTime.now(); // Sets the current date and time
	    }
	    @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	    @JoinTable(name = "user_roles",
	               joinColumns = @JoinColumn(name = "user_id"),
	               inverseJoinColumns = @JoinColumn(name = "role_id"))
	    private Set<Role> roles;
	 
}
package com.nit.model;

import java.io.Serializable;
import java.util.Set;

import org.springframework.stereotype.Component;

import jakarta.annotation.Nonnull;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.SequenceGenerator;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Component
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString
@jakarta.persistence.Table(name="Admin")
public class Admin implements Serializable{
	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "my_seq_gen")
	@SequenceGenerator(name = "my_seq_gen", sequenceName = "my_sequence", allocationSize = 1)
	private Integer id;
	@Column(length=100)
    private String password;
	@Column(length=50)
    private String name;
	@Column(length=100)
    private String address;
	@Column(length=12)
    private Long phoneNo;
	@Nonnull
    private String email;
	@Column(length=12)
	@ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    @JoinTable(name = "admin_roles",
               joinColumns = @JoinColumn(name = "admin_id"),
               inverseJoinColumns = @JoinColumn(name = "role_id"))
    private Set<Role> roles;
}

AdminPayLoad
----------------
{
  "name": "Admin Name",
  "password": "adminSecurePassword123",
  "address": "123 Admin Street, Admin City",
  "phoneNo": 1234567890,
  "email": "admin@example.com",
  "roles": [
    {
      "id": 1,
      "name": "ROLE_ADMIN"
    }
  ]
}

ApplicantPayload
{
  "userId": "applicant123",
  "password": "securePassword123",
  "email": "applicant@example.com",
  "connectionType": "email",
  "mobile": 9876543210,
  "roles": [
    {
      "id": 1,
      "name": "ROLE_USER"
    }
  ]
}

aaaa